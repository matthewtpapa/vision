name: ci-matrix

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test-build-smoke:
    name: ${{ matrix.os }} / py${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
        python: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: pip
          cache-dependency-path: |
            requirements-dev.txt

      - name: Upgrade pip tooling
        run: python -m pip install -U pip setuptools wheel

      - name: Install (editable + dev)
        run: |
          pip install -e .
          pip install -r requirements-dev.txt
          # minimal runtime deps for eval/plot if needed by tests
          pip install pillow numpy

      - name: Lint
        run: |
          ruff check .
          ruff format --check .

      - name: Typecheck
        run: |
          if command -v mypy >/dev/null 2>&1; then mypy src/vision; else echo "mypy not installed"; fi

      - name: Unit tests
        run: |
          pytest -q

      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v2.20
        env:
          CIBW_BUILD: "cp310-* cp311-* cp312-*"
          CIBW_SKIP: "pp*"
          CIBW_ARCHS_MACOS: "universal2"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux2014"
        with:
          output-dir: wheelhouse

      - name: Fresh venv smoke install (from wheel)
        run: |
          python -m venv .venv
          . .venv/bin/activate || .\.venv\Scripts\activate
          python -m pip install wheelhouse/*.whl || python -m pip install -e .
          python - <<'PY'
import latency_vision as lv
print("latency_vision", lv.version)
PY

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-py${{ matrix.python }}
          path: wheelhouse/*.whl

