name: verify
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  verify:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install deps from wheelhouse
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel
          python -m pip install -e .
          wh="third_party/wheels/${{ runner.os }}-py${{ matrix.python-version }}"
          python -m pip install -r requirements-dev.txt --no-index --find-links "$wh"
          python -m pip install --no-index --find-links "$wh" \
            numpy==1.26.4 pillow==10.4.0 typing_extensions==4.12.2

      - name: Sanity: NumPy presence (non-fatal)
        continue-on-error: true
        run: |
          python -c "import importlib; print('numpy:', bool(importlib.util.find_spec('numpy')))"

      - name: Tool versions
        run: |
          python --version
          python -m pip --version
          python - <<'PY'
          import sys, setuptools
          print("setuptools", setuptools.__version__, "py", ".".join(map(str, sys.version_info[:3])))
          PY
          ruff --version
          mypy --version
      # Use the official action to avoid npm 403s and honor repo config
      - name: Markdownlint (scoped)
        uses: DavidAnson/markdownlint-cli2-action@v15
        with:
          config: .markdownlint-cli2.yaml
      - name: Type/Lint preflight
        env:
          MPLBACKEND: Agg
          MYPYPATH: src
        run: |
          ruff check .
          mypy --config-file mypy.ini --pretty -p vision

      - name: Import smoke (alias + legacy)
        run: |
          python - <<'PY'
          import pathlib
          import latency_vision as lv
          import vision as v
          print("lv_version:", lv.__version__)
          print("vision_path:", pathlib.Path(v.__file__).resolve())
          PY

      - name: Verify (make target)
        env:
          MPLBACKEND: Agg
          MYPYPATH: src
        run: make verify
