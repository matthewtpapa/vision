name: verify

on:
  push:
    branches: [main]
    tags:
      - 'v*'
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - '**/*.md'

concurrency:
  group: verify-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements-dev.txt
            pyproject.toml
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .
      - name: Ruff lint
        run: |
          ruff check .
          ruff format --check .
      - name: Type check
        run: mypy src
      - name: Unit tests
        run: pytest -q

  verify:
    needs: lint-and-test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11']
    env:
      OMP_NUM_THREADS: "1"
      OPENBLAS_NUM_THREADS: "1"
      MKL_NUM_THREADS: "1"
      NUMEXPR_NUM_THREADS: "1"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements-dev.txt
            pyproject.toml
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y strace jq
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .
      - name: Run prove pipeline
        run: make prove
      - name: Promotion sanity
        run: make kb-promote
      - name: Unknowns guard
        run: make unknowns-guard
      - name: Public API freeze
        run: make api-freeze
      - name: Schema bump guard
        run: make schema-bump
      - name: Gate summary â†’ Job summary
        if: always()
        run: |
          test -f gate_summary.txt && cat gate_summary.txt >> "$GITHUB_STEP_SUMMARY" || true
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: prove-artifacts-${{ matrix.python-version }}
          if-no-files-found: ignore
          path: |
            bench/oracle_stats.json
            bench/oracle_e2e.json
            bench/e2e_samples.jsonl
            logs/evidence_ledger.jsonl
            artifacts/metrics_hash.txt
            artifacts/metrics_hash_payload.json
            artifacts/purity_report.json
            artifacts/purity_offenders.txt
            artifacts/sbom.json
            artifacts/licenses.json
            artifacts/wheels_hashes.txt
            artifacts/promotion_report.json
            gate_summary.txt

  smoke:
    needs: lint-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements-dev.txt
            pyproject.toml
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install .
      - name: Import smoke test
        run: python -c "import latency_vision; print(latency_vision.__version__)"
      - name: Public API smoke test
        run: python -m pytest tests/public_api/test_facade_schema.py -q
