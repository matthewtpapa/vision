name: verify

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - main
      - develop
  workflow_dispatch: {}

# Keep this simple; expression is valid here.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: python -V

  verify-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Ensure we import from ./src even if a stale wheel is present
      - name: Force src on path
        run: echo "PYTHONPATH=$PWD/src" >> $GITHUB_ENV

      # Clean any stale installs
      - name: Clean previous installs
        run: |
          python -m pip uninstall -y latency-vision || true
          rm -rf build dist .eggs *.egg-info
          python - <<'PY'
          import pathlib, shutil, site, sys
          for p in pathlib.Path(".").rglob("__pycache__"):
              shutil.rmtree(p, ignore_errors=True)
          for s in filter(None, site.getsitepackages() + [site.getusersitepackages()]):
              for p in pathlib.Path(s).glob("latency_vision*"):
                  print("removing stale", p, file=sys.stderr)
                  shutil.rmtree(p, ignore_errors=True)
          PY

      - name: Install deps (editable)
        run: |
          python -m pip install -U pip
          pip install -r requirements-dev.txt
          pip install -e . --no-deps

      - name: Lint
        run: ruff check .

      - name: Type check
        run: mypy src

      - name: Tests
        run: pytest -q
