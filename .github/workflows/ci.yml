# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2025 The Vision Authors
name: ci
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
  pull_request:
jobs:
  markdownlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DavidAnson/markdownlint-cli2-action@v15
        with:
          config: .markdownlint-cli2.yaml

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements-dev.txt
      - run: python -m pip install --upgrade pip setuptools wheel
      - run: python -m pip install -r requirements-dev.txt
      - run: pip install -e .
      - run: make setup  # still ok; now it's a no-op if the above succeeded
      - name: Environment report
        run: |
          python -V
          python -m pip --version
          python - <<'PY'
from packaging import tags
print(f"platform tag: {next(tags.sys_tags())}")
PY
          python -m pip debug --verbose
      - run: make verify
      - run: make test-cov | tee pytest.log
      - name: Fail on skips
        run: |
          python - <<'PY' > pytest-summary.txt
import re, pathlib
text = pathlib.Path('pytest.log').read_text()
line = ''
for l in text.splitlines():
    if re.search(r'==+ .* in .* seconds ==+', l):
        line = l
m = re.search(r'(skipped=\d+|\d+\s+skipped)', line or '')
skipped = 0
if m:
    skipped = int(re.search(r'\d+', m.group()).group())
print(f'skipped={skipped}')
exit(skipped != 0)
PY
          grep -q 'skipped=0' pytest-summary.txt
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: |
            .coverage
            coverage.xml
            htmlcov
          if-no-files-found: ignore
      - run: python -m vision --version
      - run: vision --version
      - run: vision webcam --dry-run
      - run: vision webcam --use-fake-detector --dry-run

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements-dev.txt
      - run: python -m pip install --upgrade pip
      - run: python -m pip install build twine
      - run: python -m build
      - run: python -m twine check dist/*
      - uses: actions/upload-artifact@v4
        with:
          name: python-dist
          path: dist/*
          if-no-files-found: error
